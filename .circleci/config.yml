# Android Gradle CircleCI 2.0 configuration file
#
# https://circleci.com/docs/2.0/language-android/
version: 2

jobs:
  build_debug:
    working_directory: ~/project/android
    docker:
      - image: circleci/android:api-27-alpha
    environment:
      JVM_OPTS: -Xmx3200m
    steps:
      - checkout : 
          path: ~/project
      - restore_cache:
          keys:
          - jars-{{ checksum "build.gradle" }}-{{ checksum "app/build.gradle"}}
      - run: 
          name: Grant execution to Docker for the gradlew file
          command: sudo chmod +x gradlew
      - run:
          name: Build Debug
          command: ./gradlew assembleDebug
      - store_artifacts:
          path: app/build/outputs/apk/debug/app-debug.apk
          destination: app-debug.apk

  build_release:
    working_directory: ~/project/android
    docker:
      - image: circleci/android:api-27-alpha
    environment:
      JVM_OPTS: -Xmx3200m
    steps:
      - checkout : 
          path: ~/project
      - restore_cache:
          keys:
          - jars-{{ checksum "build.gradle" }}-{{ checksum "app/build.gradle"}}
      - run: 
          name: Grant execution to Docker for the gradlew file
          command: sudo chmod +x gradlew
      - run:
          name: Build Release
          command: ./gradlew assembleRelease
      - store_artifacts:
          path: app/build/outputs/apk/debug/app-release-unsigned.apk
          destination: app-release-unsigned.apk

  run_unit_tests:
    working_directory: ~/project/android
    docker:
      - image: circleci/android:api-27-alpha
    steps:
      - checkout : 
          path: ~/project
      - run: 
          name: Grant execution to Docker for the gradlew file
          command: sudo chmod +x gradlew
      - run:
          name: Run Tests
          command: ./gradlew lint test
      - store_artifacts:
          path: app/build/reports
          destination: reports
      - store_test_results:
          path: app/build/test-results

workflows:
  version: 2
  build:
    jobs:
      - run_unit_tests
      - build_debug:
          requires:
            - run_unit_tests
      - build_release:
          requires:
            - run_unit_tests